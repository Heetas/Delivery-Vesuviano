DELIMITER //

CREATE PROCEDURE NUMERO_CONSEGNE_RIDER(IN CF_RIDER CHAR)
BEGIN
  DECLARE CONT INT;
  SELECT COUNT(*) INTO CONT
  FROM ORDINE
  WHERE CF_CONSEGNATORE = CF_RIDER;
  SELECT CONCAT('IL RIDER CON CF ', CF_RIDER, ' HA EFFETTUATO ', CONT, ' CONSEGNE.') AS Result;
END //

CREATE PROCEDURE NUMERO_ORDINI_PER_COMUNE()
BEGIN
  DECLARE done INT DEFAULT FALSE;
  DECLARE NOME_COMUNE_VAR CHAR(20);
  DECLARE NUM_ORDINI_VAR INT;
  DECLARE cur CURSOR FOR
    SELECT COMUNE.NOME_COMUNE, COUNT(*) AS NUM_ORDINI
    FROM COMUNE
           INNER JOIN CLIENTE ON COMUNE.NOME_COMUNE = CLIENTE.COMUNE_RES
           INNER JOIN ORDINE ON CLIENTE.EMAIL = ORDINE.EMAIL_DESTINATARIO
    GROUP BY COMUNE.NOME_COMUNE;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

  OPEN cur;
  read_loop: LOOP
    FETCH cur INTO NOME_COMUNE_VAR, NUM_ORDINI_VAR;
    IF done THEN
      LEAVE read_loop;
    END IF;
SELECT 
    CONCAT('COMUNE: ',
            NOME_COMUNE_VAR,
            ', NUMERO ORDINI: ',
            NUM_ORDINI_VAR) AS Result;
  END LOOP;
  CLOSE cur;
END //

CREATE PROCEDURE CALCOLAGUADAGNI()
BEGIN
  DECLARE TOTALE_PAGAMENTI_VAR DECIMAL(10, 2);
  SELECT SUM(IMPORTO) INTO TOTALE_PAGAMENTI_VAR
  FROM PAGAMENTO
         INNER JOIN ORDINE ON ORDINE.SCONTRINO_ORDINE = PAGAMENTO.SCONTRINO
  GROUP BY ORDINE.SCONTRINO_ORDINE;
  SELECT CONCAT('TOTALE PAGAMENTI: ', TOTALE_PAGAMENTI_VAR) AS Result;
END //

CREATE PROCEDURE RIDER_PRENOTATI()
BEGIN
  DECLARE done INT DEFAULT FALSE;
  DECLARE CODF_RIDER_VAR CHAR(16);
  DECLARE NUM_PRENOTAZIONI_VAR INT;
  DECLARE cur CURSOR FOR
    SELECT EFFETTUANO.CODF_RIDER, COUNT(*) AS NUM_PRENOTAZIONI
    FROM EFFETTUANO
           INNER JOIN RIDER ON EFFETTUANO.CODF_RIDER = RIDER.CF_RIDER
    GROUP BY EFFETTUANO.CODF_RIDER;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

  OPEN cur;
  read_loop: LOOP
    FETCH cur INTO CODF_RIDER_VAR, NUM_PRENOTAZIONI_VAR;
    IF done THEN
      LEAVE read_loop;
    END IF;
    SELECT CONCAT('RIDER:', CODF_RIDER_VAR, ', NUMERO DI PRENOTAZIONI: ', NUM_PRENOTAZIONI_VAR) AS Result;
  END LOOP;
  CLOSE cur;
END //

DELIMITER ;
