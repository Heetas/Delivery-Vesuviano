DELIMITER //

CREATE TRIGGER LIMITA_PRENOTAZIONI
  BEFORE INSERT
  ON EFFETTUANO
  FOR EACH ROW
BEGIN
  DECLARE LUNEDI_COUNT INT;
  DECLARE MARTEDI_COUNT INT;
  DECLARE MERCOLEDI_COUNT INT;
  DECLARE GIOVEDI_COUNT INT;
  DECLARE VENERDI_COUNT INT;
  DECLARE SABATO_COUNT INT;
  DECLARE DOMENICA_COUNT INT;

  IF NEW.GIORNO_LAVORATIVO = 'LUNEDI' THEN
    SELECT COUNT(*) INTO LUNEDI_COUNT
    FROM EFFETTUANO
    WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
      AND GIORNO_LAVORATIVO = 'LUNEDI';

    IF LUNEDI_COUNT >= 5 THEN
      SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER IL LUNEDÌ.';
    END IF;
  ELSIF NEW.GIORNO_LAVORATIVO = 'MARTEDI' THEN
  SELECT COUNT(*) INTO MARTEDI_COUNT
  FROM EFFETTUANO
  WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
    AND GIORNO_LAVORATIVO = 'MARTEDI';

  IF MARTEDI_COUNT >= 5 THEN
    SIGNAL SQLSTATE '45001'
      SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER IL MARTEDÌ.';
  END IF;
  ELSIF NEW.GIORNO_LAVORATIVO = 'MERCOLEDI' THEN
  SELECT COUNT(*) INTO MERCOLEDI_COUNT
  FROM EFFETTUANO
  WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
    AND GIORNO_LAVORATIVO = 'MERCOLEDI';

  IF MERCOLEDI_COUNT >= 5 THEN
    SIGNAL SQLSTATE '45002'
      SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER IL MERCOLEDÌ.';
  END IF;
  ELSIF NEW.GIORNO_LAVORATIVO = 'GIOVEDI' THEN
  SELECT COUNT(*) INTO GIOVEDI_COUNT
  FROM EFFETTUANO
  WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
    AND GIORNO_LAVORATIVO = 'GIOVEDI';

  IF GIOVEDI_COUNT >= 5 THEN
    SIGNAL SQLSTATE '45003'
      SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER IL GIOVEDÌ.';
  END IF;
  ELSIF NEW.GIORNO_LAVORATIVO = 'VENERDI' THEN
  SELECT COUNT(*) INTO VENERDI_COUNT
  FROM EFFETTUANO
  WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
    AND GIORNO_LAVORATIVO = 'VENERDI';

  IF VENERDI_COUNT >= 10 THEN
    SIGNAL SQLSTATE '45004'
      SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER IL VENERDÌ.';
  END IF;
  ELSIF NEW.GIORNO_LAVORATIVO = 'SABATO' THEN
  SELECT COUNT(*) INTO SABATO_COUNT
  FROM EFFETTUANO
  WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
    AND GIORNO_LAVORATIVO = 'SABATO';

  IF SABATO_COUNT >= 10 THEN
    SIGNAL SQLSTATE '45005'
      SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER IL SABATO.';
  END IF;
  ELSIF NEW.GIORNO_LAVORATIVO = 'DOMENICA' THEN
  SELECT COUNT(*) INTO DOMENICA_COUNT
  FROM EFFETTUANO
  WHERE ANNO1 = YEAR(NEW.DATAPRENOTAZIONE)
    AND GIORNO_LAVORATIVO = 'DOMENICA';

  IF DOMENICA_COUNT >= 10 THEN
    SIGNAL SQLSTATE '45006'
      SET MESSAGE_TEXT = 'È STATO RAGGIUNTO IL LIMITE MASSIMO DI PRENOTAZIONI PER LA DOMENICA.';
  END IF;
END IF;
END //

CREATE TABLE SEQ_RIDER_ID (
                            id INT
);

INSERT INTO SEQ_RIDER_ID VALUES (1);

CREATE TRIGGER TRG_INCREMENTARIDERID
  BEFORE INSERT
  ON RIDER
  FOR EACH ROW
  SET NEW.RIDER_ID = (SELECT id FROM SEQ_RIDER_ID);

CREATE TRIGGER OBBLIGA_PAGAMENTO_CARTA
  BEFORE INSERT
  ON PAGAMENTO
  FOR EACH ROW
BEGIN
  IF NEW.METODO_PAY != 'CARTA DI CREDITO/DEBITO' AND NEW.IMPORTO > 35 THEN
    SIGNAL SQLSTATE '45007'
      SET MESSAGE_TEXT = 'L''IMPORTO SUPERA I 35 EURO. È OBBLIGATORIO PAGARE CON CARTA DI CREDITO/DEBITO.';
  END IF;
END //

CREATE TRIGGER TRG_RITIRACONSEGNA
  BEFORE INSERT
  ON ORDINE
  FOR EACH ROW
BEGIN
  DECLARE V_COMUNE_RIDER VARCHAR(20);
  DECLARE V_COMUNE_LOCALE VARCHAR(20);
  DECLARE V_COMUNE_DESTINATARIO VARCHAR(20);

  SELECT COMUNE_LAVORATIVO INTO V_COMUNE_RIDER FROM RIDER WHERE CF_RIDER = NEW.CF_CONSEGNATORE;
  SELECT COMUNE_SEDE INTO V_COMUNE_LOCALE FROM LOCALE WHERE P_IVA = NEW.P_IVALOCALE;
  SELECT COMUNE_RES INTO V_COMUNE_DESTINATARIO FROM CLIENTE WHERE EMAIL = NEW.EMAIL_DESTINATARIO;

  IF V_COMUNE_RIDER <> V_COMUNE_LOCALE OR V_COMUNE_RIDER <> V_COMUNE_DESTINATARIO THEN
    SIGNAL SQLSTATE '45008'
      SET MESSAGE_TEXT = 'IL RIDER PUÒ RITIRARE AL LOCALE E CONSEGNARE AL CLIENTE SOLO NELLO STESSO COMUNE.';
  END IF;
END //

CREATE TRIGGER TRG_CONTROLLOIMPORTOMINIMO
  BEFORE INSERT
  ON PAGAMENTO
  FOR EACH ROW
BEGIN
  IF NEW.IMPORTO <= 10 THEN
    SIGNAL SQLSTATE '45009'
      SET MESSAGE_TEXT = 'L''IMPORTO DEL PAGAMENTO DEVE ESSERE MAGGIORE DI 10.';
  END IF;
END //

CREATE TRIGGER TRG_ORDINE_BEFORE_INSERT
  BEFORE INSERT
  ON ORDINE
  FOR EACH ROW
BEGIN
  DECLARE V_RIDER_STATO VARCHAR(20);
  SELECT STATO INTO V_RIDER_STATO
  FROM ORDINE
  WHERE CF_CONSEGNATORE = NEW.CF_CONSEGNATORE
  ORDER BY DATA_E_ORA DESC LIMIT 1;
  IF V_RIDER_STATO IN ('IN LAVORAZIONE', 'RITIRATO', 'IN CONSEGNA') THEN
    SIGNAL SQLSTATE '45010'
      SET MESSAGE_TEXT = 'IL RIDER È GIÀ OCCUPATO CON LA CONSEGNA DI UN ALTRO ORDINE.';
  END IF;
END //

DELIMITER ;
